[["Map",1,2,9,10,51,52,99,100,144,145],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.7.5","content-config-digest","be009c133db6bf22","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://Rohit-Medpalli123.github.io\",\"compressHTML\":true,\"base\":\"/PersonalWebsite\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[]},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":{\"type\":\"shiki\",\"excludeLangs\":[\"math\"]},\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"dracula\",\"themes\":{},\"wrap\":true,\"transformers\":[]},\"remarkPlugins\":[],\"rehypePlugins\":[],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"responsiveImages\":false,\"headingIdCompat\":false,\"preserveScriptOrder\":false},\"legacy\":{\"collections\":false}}","experience",["Map",9,11],{"id":9,"data":12,"filePath":34,"digest":35,"rendered":36,"legacyId":50},{"title":13,"experiences":14,"education":30},"Work Experience",[15,19,22,26],{"company":16,"role":17,"period":18},"Infilect Technologies Private Limited","Lead Software Test Engineer","2022 - Present",{"company":16,"role":20,"period":21},"Senior Software Test Engineer","2019 - 2022",{"company":23,"role":24,"period":25},"Bonzai Digital Pvt. Ltd","QA Engineer","2018 - 2019",{"company":27,"role":28,"period":29},"Qxf2 Services","Intern QA Engineer","2016 - 2017",{"company":31,"role":32,"period":33},"Electronics & Telecommunication","Bachelor of Engineering","2013 - 2016","src/content/experience/experience.md","1a125e6f196067f2",{"html":37,"metadata":38},"",{"headings":39,"localImagePaths":40,"remoteImagePaths":41,"frontmatter":42,"imagePaths":49},[],[],[],{"title":13,"experiences":43,"education":48},[44,45,46,47],{"company":16,"role":17,"period":18},{"company":16,"role":20,"period":21},{"company":23,"role":24,"period":25},{"company":27,"role":28,"period":29},{"company":31,"role":32,"period":33},[],"experience.md","skills",["Map",53,54],"technical",{"id":53,"data":55,"filePath":82,"digest":83,"rendered":84,"legacyId":98},{"title":56,"skills":57},"Technical Arsenal",[58,66,74],{"category":59,"items":60},"Testing & Automation",[61,62,63,64,65],"Selenium WebDriver","Appium","TestNG / JUnit","REST API Testing","JMeter Performance Testing",{"category":67,"items":68},"Development",[69,70,71,72,73],"Python","Java","JavaScript","SQL & MongoDB","Git & Jenkins",{"category":75,"items":76},"Investigation Tools",[77,78,79,80,81],"Chrome DevTools","Postman","JMeter","Docker","CI/CD Pipelines","src/content/skills/technical.md","7c287c9f20080868",{"html":37,"metadata":85},{"headings":86,"localImagePaths":87,"remoteImagePaths":88,"frontmatter":89,"imagePaths":97},[],[],[],{"title":56,"skills":90},[91,93,95],{"category":59,"items":92},[61,62,63,64,65],{"category":67,"items":94},[69,70,71,72,73],{"category":75,"items":96},[77,78,79,80,81],[],"technical.md","blog",["Map",101,102],"selenium-best-practices",{"id":101,"data":103,"body":111,"filePath":112,"digest":113,"rendered":114,"legacyId":143},{"title":104,"date":105,"author":106,"tags":107},"Best Practices for Selenium Test Automation",["Date","2025-04-27T00:00:00.000Z"],"Rohit",[108,109,110],"selenium","automation","testing","# Best Practices for Selenium Test Automation\n\nAs an SDET with years of experience in test automation, I've learned several valuable lessons about creating maintainable and reliable Selenium test suites. Here are some key best practices to follow:\n\n## 1. Use Page Object Model\n\nThe Page Object Model (POM) is a design pattern that creates an object repository for storing all web elements. It helps reduce code duplication and improves test maintenance.\n\n```java\npublic class LoginPage {\n    private WebDriver driver;\n    \n    @FindBy(id = \"username\")\n    private WebElement usernameField;\n    \n    @FindBy(id = \"password\")\n    private WebElement passwordField;\n    \n    public LoginPage(WebDriver driver) {\n        this.driver = driver;\n        PageFactory.initElements(driver, this);\n    }\n    \n    public void login(String username, String password) {\n        usernameField.sendKeys(username);\n        passwordField.sendKeys(password);\n        passwordField.submit();\n    }\n}\n```\n\n## 2. Implement Proper Wait Strategies\n\nAlways use explicit waits instead of implicit waits. They provide better control and make tests more reliable.\n\n```java\nWebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));\nWebElement element = wait.until(ExpectedConditions.elementToBeClickable(By.id(\"submit\")));\n```\n\n## 3. Use Test Data Management\n\nExternalize test data using JSON or Excel files. This makes tests more maintainable and allows for easy data updates.\n\n## 4. Implement Proper Reporting\n\nUse tools like ExtentReports or Allure for detailed test reporting. Good reports help in quick problem identification.\n\nRemember: The key to successful test automation is writing maintainable, reliable, and scalable tests.\n\n## 5. Use Proper Exception Handling\n\nImplement proper exception handling to handle unexpected errors and improve test stability.","src/content/blog/selenium-best-practices.md","498d462221ccd5c3",{"html":115,"metadata":116},"\u003Ch1 id=\"best-practices-for-selenium-test-automation\">Best Practices for Selenium Test Automation\u003C/h1>\n\u003Cp>As an SDET with years of experience in test automation, I’ve learned several valuable lessons about creating maintainable and reliable Selenium test suites. Here are some key best practices to follow:\u003C/p>\n\u003Ch2 id=\"1-use-page-object-model\">1. Use Page Object Model\u003C/h2>\n\u003Cp>The Page Object Model (POM) is a design pattern that creates an object repository for storing all web elements. It helps reduce code duplication and improves test maintenance.\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"java\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">public\u003C/span>\u003Cspan style=\"color:#FF79C6\"> class\u003C/span>\u003Cspan style=\"color:#8BE9FD\"> LoginPage\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    private\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\"> WebDriver\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> driver;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    @\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\">FindBy\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">id\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">username\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    private\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\"> WebElement\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> usernameField;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    @\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\">FindBy\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">id\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">password\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    private\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\"> WebElement\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> passwordField;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    public\u003C/span>\u003Cspan style=\"color:#50FA7B\"> LoginPage\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\">WebDriver\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\"> driver\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.driver \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> driver;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        PageFactory.\u003C/span>\u003Cspan style=\"color:#50FA7B\">initElements\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(driver, \u003C/span>\u003Cspan style=\"color:#BD93F9;font-style:italic\">this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    public\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\"> void\u003C/span>\u003Cspan style=\"color:#50FA7B\"> login\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\">String\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\"> username\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\">String\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\"> password\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        usernameField.\u003C/span>\u003Cspan style=\"color:#50FA7B\">sendKeys\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(username);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        passwordField.\u003C/span>\u003Cspan style=\"color:#50FA7B\">sendKeys\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(password);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        passwordField.\u003C/span>\u003Cspan style=\"color:#50FA7B\">submit\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"2-implement-proper-wait-strategies\">2. Implement Proper Wait Strategies\u003C/h2>\n\u003Cp>Always use explicit waits instead of implicit waits. They provide better control and make tests more reliable.\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"java\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD;font-style:italic\">WebDriverWait\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> wait \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#FF79C6;font-weight:bold\"> new\u003C/span>\u003Cspan style=\"color:#50FA7B\"> WebDriverWait\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(driver, Duration.\u003C/span>\u003Cspan style=\"color:#50FA7B\">ofSeconds\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">10\u003C/span>\u003Cspan style=\"color:#F8F8F2\">));\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD;font-style:italic\">WebElement\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> element \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> wait.\u003C/span>\u003Cspan style=\"color:#50FA7B\">until\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(ExpectedConditions.\u003C/span>\u003Cspan style=\"color:#50FA7B\">elementToBeClickable\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(By.\u003C/span>\u003Cspan style=\"color:#50FA7B\">id\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">submit\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)));\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"3-use-test-data-management\">3. Use Test Data Management\u003C/h2>\n\u003Cp>Externalize test data using JSON or Excel files. This makes tests more maintainable and allows for easy data updates.\u003C/p>\n\u003Ch2 id=\"4-implement-proper-reporting\">4. Implement Proper Reporting\u003C/h2>\n\u003Cp>Use tools like ExtentReports or Allure for detailed test reporting. Good reports help in quick problem identification.\u003C/p>\n\u003Cp>Remember: The key to successful test automation is writing maintainable, reliable, and scalable tests.\u003C/p>\n\u003Ch2 id=\"5-use-proper-exception-handling\">5. Use Proper Exception Handling\u003C/h2>\n\u003Cp>Implement proper exception handling to handle unexpected errors and improve test stability.\u003C/p>",{"headings":117,"localImagePaths":137,"remoteImagePaths":138,"frontmatter":139,"imagePaths":142},[118,121,125,128,131,134],{"depth":119,"slug":120,"text":104},1,"best-practices-for-selenium-test-automation",{"depth":122,"slug":123,"text":124},2,"1-use-page-object-model","1. Use Page Object Model",{"depth":122,"slug":126,"text":127},"2-implement-proper-wait-strategies","2. Implement Proper Wait Strategies",{"depth":122,"slug":129,"text":130},"3-use-test-data-management","3. Use Test Data Management",{"depth":122,"slug":132,"text":133},"4-implement-proper-reporting","4. Implement Proper Reporting",{"depth":122,"slug":135,"text":136},"5-use-proper-exception-handling","5. Use Proper Exception Handling",[],[],{"title":104,"date":140,"author":106,"tags":141},["Date","2025-04-27T00:00:00.000Z"],[108,109,110],[],"selenium-best-practices.md","projects",["Map",146,147,241,242],"test-automation-framework",{"id":146,"data":148,"body":162,"filePath":163,"digest":164,"rendered":165,"legacyId":240},{"title":149,"description":150,"image":151,"technologies":154,"github":159,"featured":160,"completed":161,"category":109},"Building a Robust API Test Automation Framework with Python","A comprehensive end-to-end test automation framework built with Selenium WebDriver and TestNG, featuring parallel execution, detailed reporting, and CI/CD integration.",{"url":152,"alt":153},"/PersonalWebsite/images/projects/automation.webp","Test Automation Framework",[61,155,70,156,157,158],"TestNG","Maven","Jenkins","Allure Reports","https://github.com/yourusername/test-automation-framework",true,["Date","2024-12-15T00:00:00.000Z"],"# 🚀 Building a Robust API Test Automation Framework with Python\n\n## 🎯 Introduction\nHey there, fellow automation enthusiasts! 👋 Ready to dive into something exciting? Today, I'm going to walk you through our super-cool API testing framework that we've built using Python. It's like having a Swiss Army knife for API testing - versatile, reliable, and surprisingly elegant!\n\n## 🎮 What's in it for You?\nBefore we dive deep, here's what you're going to get:\n1. 🏗️ A rock-solid, maintainable testing framework\n2. 📝 Beautiful logging that actually makes sense\n3. 🌍 Support for all your environments (staging, prod, UAT)\n4. ✨ Super easy test case creation\n5. 📊 Test results that tell a story\n\n## 🏰 Architecture Overview\nThink of our framework as a well-organized castle, where each component has its specific role:\n\n```ascii\n+------------------+\n|  🧪 Test Cases   |\n+--------+---------+\n         |\n+--------v---------+     +----------------+\n|  🎮 API Player   |     |    📊 Results  |\n| (The Commander)  |     |    Tracking    |\n+--------+---------+     +----------------+\n         |\n+--------v---------+\n|  🔌 Endpoints    |\n|  (The Workers)   |\n+--------+---------+\n         |\n+--------v---------+\n|  🌐 Requests     |\n|  (The Messenger) |\n+------------------+\n```\n\n## 🎮 Meet the Dream Team\n\n### 1. 🎯 The Commander: API Player (Core/api_player.py)\nMeet our superstar - the APIPlayer class! Think of it as the commander of our API testing army. It knows what needs to be done and orchestrates everything beautifully:\n\n```python\nclass APIPlayer(Results):\n    \"\"\"The mastermind behind all API operations 🧠\"\"\"\n    \n    def __init__(self, url: str, log_file_path: Optional[str] = None, \n                 environment: str = \"staging\"):\n        # First, let's set up our result tracking superpowers!\n        super().__init__(log_file_path=log_file_path)\n        \n        # Which battlefield are we on? 🌍\n        self.environment = environment\n        \n        # Assemble our specialized teams 🚗 👥 📝\n        self.cars_api = CarsAPIEndpoints(url)      # For all things cars\n        self.users_api = UserAPIEndpoints(url)      # Managing our users\n        self.registration_api = RegistrationAPIEndpoints(url)  # Handling registrations\n```\n\n### 2. 📈 The Scorekeeper: Results Tracking (Utils/results.py)\nMeet our meticulous scorekeeper! This little genius keeps track of everything that happens in our tests:\n\n```python\nclass Results:\n    \"\"\"Your friendly neighborhood test tracker 📊\"\"\"\n    \n    def __init__(self, log_file_path: Optional[str] = None):\n        # Get our trusty logger ready 📖\n        self.logger = get_logger(\"results\")\n        \n        # Initialize our scoreboard 🏆\n        self.total = 0      # Total battles fought\n        self.passed = 0      # Victories achieved\n        self.failures = []   # Lessons learned 📝\n```\n\n### 3. 🔌 The Specialists: Endpoint Classes\nHere come our API specialists! Each one is an expert in their domain:\n\n```python\nclass CarsAPIEndpoints:\n    \"\"\"Your gateway to the world of cars 🚗\"\"\"\n    def __init__(self, base_url: str):\n        # Set up our command center 🏬\n        self.base_url = base_url\n        self.logger = get_logger(\"CarsAPI\")\n\n    def get_cars(self, headers: Dict[str, str]) -> Response:\n        \"\"\"Fetch our amazing car collection 🚘\"\"\"\n        url = f\"{self.base_url}/cars\"\n        return requests.get(url, headers=headers)\n```\n\n## ✨ Awesome Features\n\n### 1. 🌍 Environment Mastery\nWe've got all your environments covered! Switch between them as easily as changing TV channels:\n\n```python\nparser.addoption(\n    \"--env\",\n    default=\"staging\",      # Your cozy testing playground\n    choices=[\n        \"staging\",          # 🧰 Safe space for experiments\n        \"prod\",            # 🏛 The real deal\n        \"uat\",             # 🕵️ Where users try to break things\n    ],\n    help=\"Pick your battlefield!\"\n)\n```\n\n### 2. 📖 Story-Telling Logs\nOur logs are not just logs - they tell a story! Each operation is a new adventure:\n\n```python\nself.logger.info(\"🔔 Starting a new car quest!\")\nself.logger.info(\"📡 Sending our request to the Cars Kingdom\")\nself.logger.info(f\"🎉 Victory! Got response with status: {response.status_code}\")\nself.logger.error(\"🚨 Oops! Something went wrong with our request\")\n```\n\n### 3. 🏆 Victory Tracking\nWe celebrate every win and learn from every challenge:\n\n```python\ndef success(self, message: str) -> None:\n    \"\"\"Celebrate another victory! 🎉\"\"\"\n    self.logger.info(f\"🟢 VICTORY: {message}\")\n    self.total += 1     # Another battle fought\n    self.passed += 1    # Another victory achieved!\n    \n    if self.passed % 10 == 0:\n        self.logger.info(\"🎁 Achievement unlocked: 10 tests passed!\")\n```\n\n### 4. 🎟️ Beautiful Reports\nWe don't just run tests - we create masterpieces! Check out our beautiful HTML reports:\n\n```python\nconfig._metadata = {\n    'Project Name': '🚗 Cars API Testing',\n    'Environment': f\"🏛 {config.option.env.upper()}\",\n    'Test Hero': os.getenv('USER', 'Mystery Tester'),\n    'Powered By': f\"Python {sys.version.split()[0]} 🐍\",\n    'Quest Started': datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n}\n```\n\n## 👑 Best Practices - Our Royal Decrees\n\n1. **📚 Clean Code is King**\n   - 🎉 Every class has its own castle (separation of concerns)\n   - 👑 Object-oriented design rules our kingdom\n   - 🌟 Type hints light the way for future explorers\n\n2. **🛡️ Error Handling - Our Shield**\n   - 🏹 Custom exceptions for precise targeting\n   - 💬 Clear error messages that even dragons understand\n   - 🎯 Status codes are always validated\n\n3. **🏆 Test Results - Our Chronicles**\n   - 📈 Automatic tracking of every quest\n   - 📖 Detailed reports of our adventures\n   - ⏱️ Performance metrics for the speed demons\n\n4. **⚙️ Configuration - Our Master Plan**\n   - 🌍 Each environment gets its perfect setup\n   - 🎮 Easy controls through pytest options\n   - 📖 Logs that tell epic tales\n\n## 🎮 Let's Write Some Epic Tests!\n\nHere's how we embark on a quest to add a new car to our collection:\n\n```python\ndef test_add_new_tesla(api_player):\n    \"\"\"Quest: Add a shiny new Tesla to our collection 🚗⚡\"\"\"\n    # First, let's get our VIP pass 🎟️\n    auth_details = api_player.set_auth_details(\"hero\", \"secret_spell\")\n    \n    # Prepare our new Tesla for the grand entrance 🚘\n    car_details = {\n        \"name\": \"Model 3\",\n        \"brand\": \"Tesla\",\n        \"year\": 2023,\n        \"features\": [\"autopilot\", \"ludicrous_mode\"] 🚀\n    }\n    \n    # Time to add our electric beauty! ⚡\n    success, response = api_player.add_car(\n        car_details=car_details,\n        auth_details=auth_details\n    )\n    \n    # Let's check if our mission was successful 🎯\n    assert success, \"🚨 Oh no! Our Tesla couldn't join the party!\"\n    assert response[\"status\"] == \"success\", \"😵 Something's not right with our Tesla!\"\n    \n    # Celebrate our victory! 🎉\n    print(\"🎉 Woohoo! Tesla has joined our awesome car collection!\")\n```\n\n## 🤓 Cool Technical Stuff\n\n### 1. 🕵️ Smart Error Detection\nWe've got your back with intelligent error handling:\n```python\ndef validate_response(self, response: Response) -> Tuple[bool, str]:\n    \"\"\"Our magical response checker 🔮\"\"\"\n    status_code = response.status_code\n    result_flag = False\n    \n    # Time to decode what the API is telling us 🔍\n    error_messages = {\n        200: \"🎉 All good! Operation successful!\",\n        401: \"🔒 Oops! Looks like you forgot your magic key!\",\n        403: \"🚫 Sorry, this area is for VIPs only!\",\n        404: \"🔍 Hmm... We looked everywhere but couldn't find it!\",\n        500: \"💥 The server had a little accident...\"\n    }\n    \n    msg = error_messages.get(status_code, \"🤔 Something unexpected happened!\")\n    if status_code == 200:\n        result_flag = True\n    \n    return result_flag, msg\n```\n\n### 2. 🌈 Magic Decorators\nOur special spells (decorators) make life easier:\n```python\ndef log_operation(operation_name: str):\n    \"\"\"Adds some sparkle to our operations ✨\"\"\"\n    def decorator(func):\n        def wrapper(*args, **kwargs):\n            logger = get_logger(\"Magic\")\n            logger.info(f\"🌟 Starting: {operation_name}\")\n            try:\n                result = func(*args, **kwargs)\n                logger.info(f\"🎉 Success: {operation_name}\")\n                return result\n            except Exception as e:\n                logger.error(f\"💥 Oops! {operation_name} failed: {str(e)}\")\n                raise\n        return wrapper\n    return decorator\n```\n\n## 📍 Coming Soon to Our Kingdom!\n\n1. **🔥 Async Powers**\n   - 🌀 Tornado-fast parallel testing\n   - 🏃 Run tests at lightning speed\n   - 🚀 Handle multiple requests like a boss\n\n2. **📈 Performance Wizardry**\n   - 🏃 Load testing that'll blow your mind\n   - ⏱️ Response time tracking to the microsecond\n   - 📆 Beautiful performance dashboards\n\n3. **🔍 Contract Testing Magic**\n   - 📖 OpenAPI validation spells\n   - 🧪 Schema verification potions\n   - 🔐 Ironclad contract enforcement\n\n4. **🔒 Security Fortress**\n   - 🛡️ Fort Knox-level authentication tests\n   - 👮 Authorization checkpoints\n   - 🔓 Security headers that even hackers respect\n\n## 🌟 The Grand Finale\n\nThere you have it, fellow adventurers! 🚀 Our API testing framework is like a well-oiled machine (with a bit of magic sprinkled on top ✨). Here's what makes it awesome:\n\n- 🎉 Write tests that are fun and easy to read\n- 📊 Track your victories with style\n- 🌍 Switch environments like a ninja\n- 📖 Get reports that tell epic stories\n- 🤓 Smart error handling that speaks human\n\nRemember: Testing doesn't have to be boring! With our framework, every test is an adventure, every bug is a dragon to slay, and every passing test suite is a victory to celebrate! 🎉\n\n## 📖 Legendary Scrolls (References)\n\n1. [📡 The Python Requests Spellbook](https://docs.python-requests.org/)\n2. [🔮 The Pytest Chronicles](https://docs.pytest.org/)\n3. [📙 The API Testing Wisdom Scrolls](https://www.qasymphony.com/blog/api-testing-best-practices/)\n4. [🔍 Python Type Hints Grimoire](https://docs.python.org/3/library/typing.html)\n5. [🌐 RESTful API Design Legends](https://restfulapi.net/)\n\nNow go forth and test with style! 🌟✨","src/content/projects/test-automation-framework.md","82e2b6876f8876b7",{"html":166,"metadata":167},"\u003Ch1 id=\"-building-a-robust-api-test-automation-framework-with-python\">🚀 Building a Robust API Test Automation Framework with Python\u003C/h1>\n\u003Ch2 id=\"-introduction\">🎯 Introduction\u003C/h2>\n\u003Cp>Hey there, fellow automation enthusiasts! 👋 Ready to dive into something exciting? Today, I’m going to walk you through our super-cool API testing framework that we’ve built using Python. It’s like having a Swiss Army knife for API testing - versatile, reliable, and surprisingly elegant!\u003C/p>\n\u003Ch2 id=\"-whats-in-it-for-you\">🎮 What’s in it for You?\u003C/h2>\n\u003Cp>Before we dive deep, here’s what you’re going to get:\u003C/p>\n\u003Col>\n\u003Cli>🏗️ A rock-solid, maintainable testing framework\u003C/li>\n\u003Cli>📝 Beautiful logging that actually makes sense\u003C/li>\n\u003Cli>🌍 Support for all your environments (staging, prod, UAT)\u003C/li>\n\u003Cli>✨ Super easy test case creation\u003C/li>\n\u003Cli>📊 Test results that tell a story\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"-architecture-overview\">🏰 Architecture Overview\u003C/h2>\n\u003Cp>Think of our framework as a well-organized castle, where each component has its specific role:\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>+------------------+\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>|  🧪 Test Cases   |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>+--------+---------+\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>         |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>+--------v---------+     +----------------+\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>|  🎮 API Player   |     |    📊 Results  |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>| (The Commander)  |     |    Tracking    |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>+--------+---------+     +----------------+\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>         |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>+--------v---------+\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>|  🔌 Endpoints    |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>|  (The Workers)   |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>+--------+---------+\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>         |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>+--------v---------+\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>|  🌐 Requests     |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>|  (The Messenger) |\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>+------------------+\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"-meet-the-dream-team\">🎮 Meet the Dream Team\u003C/h2>\n\u003Ch3 id=\"1--the-commander-api-player-coreapi_playerpy\">1. 🎯 The Commander: API Player (Core/api_player.py)\u003C/h3>\n\u003Cp>Meet our superstar - the APIPlayer class! Think of it as the commander of our API testing army. It knows what needs to be done and orchestrates everything beautifully:\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"python\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">class\u003C/span>\u003Cspan style=\"color:#8BE9FD\"> APIPlayer\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\">Results\u003C/span>\u003Cspan style=\"color:#F8F8F2\">):\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    \"\"\"The mastermind behind all API operations 🧠\"\"\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    def\u003C/span>\u003Cspan style=\"color:#BD93F9\"> __init__\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9;font-style:italic\">self\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">url\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\"> str\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">log_file_path\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> Optional[\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\">str\u003C/span>\u003Cspan style=\"color:#F8F8F2\">] \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> None\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFB86C;font-style:italic\">                 environment\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\"> str\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">staging\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">):\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">        # First, let's set up our result tracking superpowers!\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD;font-style:italic\">        super\u003C/span>\u003Cspan style=\"color:#F8F8F2\">().\u003C/span>\u003Cspan style=\"color:#BD93F9\">__init__\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">log_file_path\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\">log_file_path)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">        # Which battlefield are we on? 🌍\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        self\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.environment \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> environment\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">        # Assemble our specialized teams 🚗 👥 📝\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        self\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.cars_api \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> CarsAPIEndpoints(url)      \u003C/span>\u003Cspan style=\"color:#6272A4\"># For all things cars\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        self\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.users_api \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> UserAPIEndpoints(url)      \u003C/span>\u003Cspan style=\"color:#6272A4\"># Managing our users\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        self\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.registration_api \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> RegistrationAPIEndpoints(url)  \u003C/span>\u003Cspan style=\"color:#6272A4\"># Handling registrations\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2--the-scorekeeper-results-tracking-utilsresultspy\">2. 📈 The Scorekeeper: Results Tracking (Utils/results.py)\u003C/h3>\n\u003Cp>Meet our meticulous scorekeeper! This little genius keeps track of everything that happens in our tests:\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"python\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">class\u003C/span>\u003Cspan style=\"color:#8BE9FD\"> Results\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    \"\"\"Your friendly neighborhood test tracker 📊\"\"\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    def\u003C/span>\u003Cspan style=\"color:#BD93F9\"> __init__\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9;font-style:italic\">self\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">log_file_path\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> Optional[\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\">str\u003C/span>\u003Cspan style=\"color:#F8F8F2\">] \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> None\u003C/span>\u003Cspan style=\"color:#F8F8F2\">):\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">        # Get our trusty logger ready 📖\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        self\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.logger \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> get_logger(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">results\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">        # Initialize our scoreboard 🏆\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        self\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.total \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#6272A4\">      # Total battles fought\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        self\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.passed \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#6272A4\">      # Victories achieved\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        self\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.failures \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> []   \u003C/span>\u003Cspan style=\"color:#6272A4\"># Lessons learned 📝\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"3--the-specialists-endpoint-classes\">3. 🔌 The Specialists: Endpoint Classes\u003C/h3>\n\u003Cp>Here come our API specialists! Each one is an expert in their domain:\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"python\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">class\u003C/span>\u003Cspan style=\"color:#8BE9FD\"> CarsAPIEndpoints\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    \"\"\"Your gateway to the world of cars 🚗\"\"\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    def\u003C/span>\u003Cspan style=\"color:#BD93F9\"> __init__\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9;font-style:italic\">self\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">base_url\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\"> str\u003C/span>\u003Cspan style=\"color:#F8F8F2\">):\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">        # Set up our command center 🏬\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        self\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.base_url \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> base_url\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        self\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.logger \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> get_logger(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">CarsAPI\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    def\u003C/span>\u003Cspan style=\"color:#50FA7B\"> get_cars\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9;font-style:italic\">self\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">headers\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> Dict[\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\">str\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\">str\u003C/span>\u003Cspan style=\"color:#F8F8F2\">]) \u003C/span>\u003Cspan style=\"color:#FF79C6\">->\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> Response:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">        \"\"\"Fetch our amazing car collection 🚘\"\"\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        url \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#FF79C6\"> f\u003C/span>\u003Cspan style=\"color:#F1FA8C\">\"\u003C/span>\u003Cspan style=\"color:#BD93F9\">{\u003C/span>\u003Cspan style=\"color:#BD93F9;font-style:italic\">self\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.base_url\u003C/span>\u003Cspan style=\"color:#BD93F9\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">/cars\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> requests.get(url, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">headers\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\">headers)\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"-awesome-features\">✨ Awesome Features\u003C/h2>\n\u003Ch3 id=\"1--environment-mastery\">1. 🌍 Environment Mastery\u003C/h3>\n\u003Cp>We’ve got all your environments covered! Switch between them as easily as changing TV channels:\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"python\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">parser.addoption(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">    \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">--env\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFB86C;font-style:italic\">    default\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">staging\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,      \u003C/span>\u003Cspan style=\"color:#6272A4\"># Your cozy testing playground\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFB86C;font-style:italic\">    choices\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\">[\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">        \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">staging\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,          \u003C/span>\u003Cspan style=\"color:#6272A4\"># 🧰 Safe space for experiments\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">        \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">prod\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,            \u003C/span>\u003Cspan style=\"color:#6272A4\"># 🏛 The real deal\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">        \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">uat\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,             \u003C/span>\u003Cspan style=\"color:#6272A4\"># 🕵️ Where users try to break things\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    ],\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFB86C;font-style:italic\">    help\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Pick your battlefield!\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2--story-telling-logs\">2. 📖 Story-Telling Logs\u003C/h3>\n\u003Cp>Our logs are not just logs - they tell a story! Each operation is a new adventure:\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"python\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">self\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.logger.info(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">🔔 Starting a new car quest!\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">self\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.logger.info(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">📡 Sending our request to the Cars Kingdom\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">self\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.logger.info(\u003C/span>\u003Cspan style=\"color:#FF79C6\">f\u003C/span>\u003Cspan style=\"color:#F1FA8C\">\"🎉 Victory! Got response with status: \u003C/span>\u003Cspan style=\"color:#BD93F9\">{\u003C/span>\u003Cspan style=\"color:#F8F8F2\">response.status_code\u003C/span>\u003Cspan style=\"color:#BD93F9\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">self\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.logger.error(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">🚨 Oops! Something went wrong with our request\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"3--victory-tracking\">3. 🏆 Victory Tracking\u003C/h3>\n\u003Cp>We celebrate every win and learn from every challenge:\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"python\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">def\u003C/span>\u003Cspan style=\"color:#50FA7B\"> success\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9;font-style:italic\">self\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">message\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\"> str\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">->\u003C/span>\u003Cspan style=\"color:#BD93F9\"> None\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    \"\"\"Celebrate another victory! 🎉\"\"\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">    self\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.logger.info(\u003C/span>\u003Cspan style=\"color:#FF79C6\">f\u003C/span>\u003Cspan style=\"color:#F1FA8C\">\"🟢 VICTORY: \u003C/span>\u003Cspan style=\"color:#BD93F9\">{\u003C/span>\u003Cspan style=\"color:#F8F8F2\">message\u003C/span>\u003Cspan style=\"color:#BD93F9\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">    self\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.total \u003C/span>\u003Cspan style=\"color:#FF79C6\">+=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#6272A4\">     # Another battle fought\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">    self\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.passed \u003C/span>\u003Cspan style=\"color:#FF79C6\">+=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#6272A4\">    # Another victory achieved!\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    if\u003C/span>\u003Cspan style=\"color:#BD93F9;font-style:italic\"> self\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.passed \u003C/span>\u003Cspan style=\"color:#FF79C6\">%\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 10\u003C/span>\u003Cspan style=\"color:#FF79C6\"> ==\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        self\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.logger.info(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">🎁 Achievement unlocked: 10 tests passed!\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"4-️-beautiful-reports\">4. 🎟️ Beautiful Reports\u003C/h3>\n\u003Cp>We don’t just run tests - we create masterpieces! Check out our beautiful HTML reports:\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"python\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">config._metadata \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">    '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Project Name\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">: \u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">🚗 Cars API Testing\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">    '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Environment\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">: \u003C/span>\u003Cspan style=\"color:#FF79C6\">f\u003C/span>\u003Cspan style=\"color:#F1FA8C\">\"🏛 \u003C/span>\u003Cspan style=\"color:#BD93F9\">{\u003C/span>\u003Cspan style=\"color:#F8F8F2\">config.option.env.upper()\u003C/span>\u003Cspan style=\"color:#BD93F9\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">    '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Test Hero\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">: os.getenv(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">USER\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Mystery Tester\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">    '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Powered By\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">: \u003C/span>\u003Cspan style=\"color:#FF79C6\">f\u003C/span>\u003Cspan style=\"color:#F1FA8C\">\"Python \u003C/span>\u003Cspan style=\"color:#BD93F9\">{\u003C/span>\u003Cspan style=\"color:#F8F8F2\">sys.version.split()[\u003C/span>\u003Cspan style=\"color:#BD93F9\">0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">]\u003C/span>\u003Cspan style=\"color:#BD93F9\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> 🐍\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">    '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Quest Started\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">: datetime.now().strftime(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">%Y-%m-\u003C/span>\u003Cspan style=\"color:#BD93F9\">%d\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> %H:%M:%S\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"-best-practices---our-royal-decrees\">👑 Best Practices - Our Royal Decrees\u003C/h2>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>📚 Clean Code is King\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>🎉 Every class has its own castle (separation of concerns)\u003C/li>\n\u003Cli>👑 Object-oriented design rules our kingdom\u003C/li>\n\u003Cli>🌟 Type hints light the way for future explorers\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>🛡️ Error Handling - Our Shield\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>🏹 Custom exceptions for precise targeting\u003C/li>\n\u003Cli>💬 Clear error messages that even dragons understand\u003C/li>\n\u003Cli>🎯 Status codes are always validated\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>🏆 Test Results - Our Chronicles\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>📈 Automatic tracking of every quest\u003C/li>\n\u003Cli>📖 Detailed reports of our adventures\u003C/li>\n\u003Cli>⏱️ Performance metrics for the speed demons\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>⚙️ Configuration - Our Master Plan\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>🌍 Each environment gets its perfect setup\u003C/li>\n\u003Cli>🎮 Easy controls through pytest options\u003C/li>\n\u003Cli>📖 Logs that tell epic tales\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"-lets-write-some-epic-tests\">🎮 Let’s Write Some Epic Tests!\u003C/h2>\n\u003Cp>Here’s how we embark on a quest to add a new car to our collection:\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"python\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">def\u003C/span>\u003Cspan style=\"color:#50FA7B\"> test_add_new_tesla\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">api_player\u003C/span>\u003Cspan style=\"color:#F8F8F2\">):\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    \"\"\"Quest: Add a shiny new Tesla to our collection 🚗⚡\"\"\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    # First, let's get our VIP pass 🎟️\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    auth_details \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> api_player.set_auth_details(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">hero\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">secret_spell\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    # Prepare our new Tesla for the grand entrance 🚘\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    car_details \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">        \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">name\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">: \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Model 3\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">        \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">brand\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">: \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Tesla\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">        \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">year\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">: \u003C/span>\u003Cspan style=\"color:#BD93F9\">2023\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">        \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">features\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">: [\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">autopilot\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">ludicrous_mode\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">] 🚀\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    # Time to add our electric beauty! ⚡\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    success, response \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> api_player.add_car(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFB86C;font-style:italic\">        car_details\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\">car_details,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFB86C;font-style:italic\">        auth_details\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\">auth_details\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    # Let's check if our mission was successful 🎯\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    assert\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> success, \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">🚨 Oh no! Our Tesla couldn't join the party!\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    assert\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> response[\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">status\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">] \u003C/span>\u003Cspan style=\"color:#FF79C6\">==\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">success\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">😵 Something's not right with our Tesla!\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    # Celebrate our victory! 🎉\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">    print\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">🎉 Woohoo! Tesla has joined our awesome car collection!\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"-cool-technical-stuff\">🤓 Cool Technical Stuff\u003C/h2>\n\u003Ch3 id=\"1-️-smart-error-detection\">1. 🕵️ Smart Error Detection\u003C/h3>\n\u003Cp>We’ve got your back with intelligent error handling:\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"python\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">def\u003C/span>\u003Cspan style=\"color:#50FA7B\"> validate_response\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9;font-style:italic\">self\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">response\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> Response) \u003C/span>\u003Cspan style=\"color:#FF79C6\">->\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> Tuple[\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\">bool\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\">str\u003C/span>\u003Cspan style=\"color:#F8F8F2\">]:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    \"\"\"Our magical response checker 🔮\"\"\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    status_code \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> response.status_code\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    result_flag \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> False\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    # Time to decode what the API is telling us 🔍\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    error_messages \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9\">        200\u003C/span>\u003Cspan style=\"color:#F8F8F2\">: \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">🎉 All good! Operation successful!\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9\">        401\u003C/span>\u003Cspan style=\"color:#F8F8F2\">: \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">🔒 Oops! Looks like you forgot your magic key!\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9\">        403\u003C/span>\u003Cspan style=\"color:#F8F8F2\">: \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">🚫 Sorry, this area is for VIPs only!\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9\">        404\u003C/span>\u003Cspan style=\"color:#F8F8F2\">: \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">🔍 Hmm... We looked everywhere but couldn't find it!\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9\">        500\u003C/span>\u003Cspan style=\"color:#F8F8F2\">: \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">💥 The server had a little accident...\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    msg \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> error_messages.get(status_code, \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">🤔 Something unexpected happened!\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> status_code \u003C/span>\u003Cspan style=\"color:#FF79C6\">==\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 200\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        result_flag \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> True\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> result_flag, msg\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2--magic-decorators\">2. 🌈 Magic Decorators\u003C/h3>\n\u003Cp>Our special spells (decorators) make life easier:\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"python\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">def\u003C/span>\u003Cspan style=\"color:#50FA7B\"> log_operation\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">operation_name\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\"> str\u003C/span>\u003Cspan style=\"color:#F8F8F2\">):\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    \"\"\"Adds some sparkle to our operations ✨\"\"\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    def\u003C/span>\u003Cspan style=\"color:#50FA7B\"> decorator\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">func\u003C/span>\u003Cspan style=\"color:#F8F8F2\">):\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        def\u003C/span>\u003Cspan style=\"color:#50FA7B\"> wrapper\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">args\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FF79C6\">**\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">kwargs\u003C/span>\u003Cspan style=\"color:#F8F8F2\">):\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            logger \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> get_logger(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Magic\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            logger.info(\u003C/span>\u003Cspan style=\"color:#FF79C6\">f\u003C/span>\u003Cspan style=\"color:#F1FA8C\">\"🌟 Starting: \u003C/span>\u003Cspan style=\"color:#BD93F9\">{\u003C/span>\u003Cspan style=\"color:#F8F8F2\">operation_name\u003C/span>\u003Cspan style=\"color:#BD93F9\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            try\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">                result \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> func(\u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#F8F8F2\">args, \u003C/span>\u003Cspan style=\"color:#FF79C6\">**\u003C/span>\u003Cspan style=\"color:#F8F8F2\">kwargs)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">                logger.info(\u003C/span>\u003Cspan style=\"color:#FF79C6\">f\u003C/span>\u003Cspan style=\"color:#F1FA8C\">\"🎉 Success: \u003C/span>\u003Cspan style=\"color:#BD93F9\">{\u003C/span>\u003Cspan style=\"color:#F8F8F2\">operation_name\u003C/span>\u003Cspan style=\"color:#BD93F9\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">                return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> result\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            except\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\"> Exception\u003C/span>\u003Cspan style=\"color:#FF79C6\"> as\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> e:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">                logger.error(\u003C/span>\u003Cspan style=\"color:#FF79C6\">f\u003C/span>\u003Cspan style=\"color:#F1FA8C\">\"💥 Oops! \u003C/span>\u003Cspan style=\"color:#BD93F9\">{\u003C/span>\u003Cspan style=\"color:#F8F8F2\">operation_name\u003C/span>\u003Cspan style=\"color:#BD93F9\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> failed: \u003C/span>\u003Cspan style=\"color:#BD93F9\">{\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\">str\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(e)\u003C/span>\u003Cspan style=\"color:#BD93F9\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">                raise\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> wrapper\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> decorator\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"-coming-soon-to-our-kingdom\">📍 Coming Soon to Our Kingdom!\u003C/h2>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>🔥 Async Powers\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>🌀 Tornado-fast parallel testing\u003C/li>\n\u003Cli>🏃 Run tests at lightning speed\u003C/li>\n\u003Cli>🚀 Handle multiple requests like a boss\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>📈 Performance Wizardry\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>🏃 Load testing that’ll blow your mind\u003C/li>\n\u003Cli>⏱️ Response time tracking to the microsecond\u003C/li>\n\u003Cli>📆 Beautiful performance dashboards\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>🔍 Contract Testing Magic\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>📖 OpenAPI validation spells\u003C/li>\n\u003Cli>🧪 Schema verification potions\u003C/li>\n\u003Cli>🔐 Ironclad contract enforcement\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>🔒 Security Fortress\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>🛡️ Fort Knox-level authentication tests\u003C/li>\n\u003Cli>👮 Authorization checkpoints\u003C/li>\n\u003Cli>🔓 Security headers that even hackers respect\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"-the-grand-finale\">🌟 The Grand Finale\u003C/h2>\n\u003Cp>There you have it, fellow adventurers! 🚀 Our API testing framework is like a well-oiled machine (with a bit of magic sprinkled on top ✨). Here’s what makes it awesome:\u003C/p>\n\u003Cul>\n\u003Cli>🎉 Write tests that are fun and easy to read\u003C/li>\n\u003Cli>📊 Track your victories with style\u003C/li>\n\u003Cli>🌍 Switch environments like a ninja\u003C/li>\n\u003Cli>📖 Get reports that tell epic stories\u003C/li>\n\u003Cli>🤓 Smart error handling that speaks human\u003C/li>\n\u003C/ul>\n\u003Cp>Remember: Testing doesn’t have to be boring! With our framework, every test is an adventure, every bug is a dragon to slay, and every passing test suite is a victory to celebrate! 🎉\u003C/p>\n\u003Ch2 id=\"-legendary-scrolls-references\">📖 Legendary Scrolls (References)\u003C/h2>\n\u003Col>\n\u003Cli>\u003Ca href=\"https://docs.python-requests.org/\">📡 The Python Requests Spellbook\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://docs.pytest.org/\">🔮 The Pytest Chronicles\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.qasymphony.com/blog/api-testing-best-practices/\">📙 The API Testing Wisdom Scrolls\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://docs.python.org/3/library/typing.html\">🔍 Python Type Hints Grimoire\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://restfulapi.net/\">🌐 RESTful API Design Legends\u003C/a>\u003C/li>\n\u003C/ol>\n\u003Cp>Now go forth and test with style! 🌟✨\u003C/p>",{"headings":168,"localImagePaths":233,"remoteImagePaths":234,"frontmatter":235,"imagePaths":239},[169,172,175,178,181,184,188,191,194,197,200,203,206,209,212,215,218,221,224,227,230],{"depth":119,"slug":170,"text":171},"-building-a-robust-api-test-automation-framework-with-python","🚀 Building a Robust API Test Automation Framework with Python",{"depth":122,"slug":173,"text":174},"-introduction","🎯 Introduction",{"depth":122,"slug":176,"text":177},"-whats-in-it-for-you","🎮 What’s in it for You?",{"depth":122,"slug":179,"text":180},"-architecture-overview","🏰 Architecture Overview",{"depth":122,"slug":182,"text":183},"-meet-the-dream-team","🎮 Meet the Dream Team",{"depth":185,"slug":186,"text":187},3,"1--the-commander-api-player-coreapi_playerpy","1. 🎯 The Commander: API Player (Core/api_player.py)",{"depth":185,"slug":189,"text":190},"2--the-scorekeeper-results-tracking-utilsresultspy","2. 📈 The Scorekeeper: Results Tracking (Utils/results.py)",{"depth":185,"slug":192,"text":193},"3--the-specialists-endpoint-classes","3. 🔌 The Specialists: Endpoint Classes",{"depth":122,"slug":195,"text":196},"-awesome-features","✨ Awesome Features",{"depth":185,"slug":198,"text":199},"1--environment-mastery","1. 🌍 Environment Mastery",{"depth":185,"slug":201,"text":202},"2--story-telling-logs","2. 📖 Story-Telling Logs",{"depth":185,"slug":204,"text":205},"3--victory-tracking","3. 🏆 Victory Tracking",{"depth":185,"slug":207,"text":208},"4-️-beautiful-reports","4. 🎟️ Beautiful Reports",{"depth":122,"slug":210,"text":211},"-best-practices---our-royal-decrees","👑 Best Practices - Our Royal Decrees",{"depth":122,"slug":213,"text":214},"-lets-write-some-epic-tests","🎮 Let’s Write Some Epic Tests!",{"depth":122,"slug":216,"text":217},"-cool-technical-stuff","🤓 Cool Technical Stuff",{"depth":185,"slug":219,"text":220},"1-️-smart-error-detection","1. 🕵️ Smart Error Detection",{"depth":185,"slug":222,"text":223},"2--magic-decorators","2. 🌈 Magic Decorators",{"depth":122,"slug":225,"text":226},"-coming-soon-to-our-kingdom","📍 Coming Soon to Our Kingdom!",{"depth":122,"slug":228,"text":229},"-the-grand-finale","🌟 The Grand Finale",{"depth":122,"slug":231,"text":232},"-legendary-scrolls-references","📖 Legendary Scrolls (References)",[],[],{"title":149,"description":150,"image":236,"technologies":237,"github":159,"featured":160,"completed":238,"category":109},{"url":152,"alt":153},[61,155,70,156,157,158],["Date","2024-12-15T00:00:00.000Z"],[],"test-automation-framework.md","api-testing-suite",{"id":241,"data":243,"body":254,"filePath":255,"digest":256,"rendered":257,"legacyId":277},{"title":244,"description":245,"image":246,"technologies":248,"github":251,"featured":252,"completed":253,"category":110},"API Testing Suite","A comprehensive API testing framework built with RestAssured and TestNG, featuring data-driven testing, environment management, and detailed reporting capabilities.",{"url":247,"alt":244},"/PersonalWebsite/images/projects/api-testing.webp",[249,155,70,156,78,250],"RestAssured","Newman","https://github.com/yourusername/api-testing-suite",false,["Date","2024-11-01T00:00:00.000Z"],"## Overview\nThis API testing suite provides a robust framework for testing RESTful APIs. It combines the power of RestAssured for API testing with TestNG for test orchestration, offering a comprehensive solution for API quality assurance.\n\n## Key Features\n- Data-driven testing with Excel and JSON\n- Environment configuration management\n- Response schema validation\n- Detailed HTML reporting\n- CI/CD integration with Jenkins\n- Parallel test execution\n- Request/Response logging\n\n## Technical Implementation\nThe framework utilizes RestAssured for API interactions, TestNG for test management, and custom utilities for handling test data and environment configurations. It generates detailed reports showing request/response details, test execution time, and any failures encountered.","src/content/projects/api-testing-suite.md","2140080cef5a3da7",{"html":258,"metadata":259},"\u003Ch2 id=\"overview\">Overview\u003C/h2>\n\u003Cp>This API testing suite provides a robust framework for testing RESTful APIs. It combines the power of RestAssured for API testing with TestNG for test orchestration, offering a comprehensive solution for API quality assurance.\u003C/p>\n\u003Ch2 id=\"key-features\">Key Features\u003C/h2>\n\u003Cul>\n\u003Cli>Data-driven testing with Excel and JSON\u003C/li>\n\u003Cli>Environment configuration management\u003C/li>\n\u003Cli>Response schema validation\u003C/li>\n\u003Cli>Detailed HTML reporting\u003C/li>\n\u003Cli>CI/CD integration with Jenkins\u003C/li>\n\u003Cli>Parallel test execution\u003C/li>\n\u003Cli>Request/Response logging\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"technical-implementation\">Technical Implementation\u003C/h2>\n\u003Cp>The framework utilizes RestAssured for API interactions, TestNG for test management, and custom utilities for handling test data and environment configurations. It generates detailed reports showing request/response details, test execution time, and any failures encountered.\u003C/p>",{"headings":260,"localImagePaths":270,"remoteImagePaths":271,"frontmatter":272,"imagePaths":276},[261,264,267],{"depth":122,"slug":262,"text":263},"overview","Overview",{"depth":122,"slug":265,"text":266},"key-features","Key Features",{"depth":122,"slug":268,"text":269},"technical-implementation","Technical Implementation",[],[],{"title":244,"description":245,"image":273,"technologies":274,"github":251,"featured":252,"completed":275,"category":110},{"url":247,"alt":244},[249,155,70,156,78,250],["Date","2024-11-01T00:00:00.000Z"],[],"api-testing-suite.md"]