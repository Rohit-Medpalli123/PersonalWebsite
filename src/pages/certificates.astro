---
import Layout from '../layouts/Layout.astro';
import { Image } from 'astro:assets';
import { onMount } from 'astro';

// Sample certificate data - you can replace this with actual data later
const certificates = [
  {
    title: "Introduction to Robot Framework",
    issuer: "Test Automation University",
    date: "July 2020",
    credentialId: "4c2e6931",
    description: "Introduction to Robot Framework.",
    image: "RF.png",
    url: "https://testautomationu.applitools.com/certificate/?id=4c2e6931"
  },
  {
    title: "API Testing in Python",
    issuer: "Test Automation University",
    date: "June 2025",
    credentialId: "7f25ed39",
    description: "Building an API test automation framework with Python",
    image: "API.png",
    url: "https://testautomationu.applitools.com/certificate/?id=7f25ed39"
  },
  {
    title: "Introduction to pytest",
    issuer: "Test Automation University",
    date: "June 2025",
    credentialId: "397d8419",
    description: "Introduction to pytest with hands on examples.",
    image: "Pytest.png",
    url: "https://testautomationu.applitools.com/certificate/?id=397d8419"
  },
  {
    title: "Mastering Bitbucket Pipelines for CI and CD",
    issuer: "Udemy",
    date: "Nov 2022",
    credentialId: "UC-fc5827da-b623-480b-9b3b-7c1b107 dfdeO",
    description: "Mastering Bitbucket Pipelines for CI and CD.",
    image: "BitBucketPipelines.jpg",
    url: "https://ude.my/UC-fc5827da-b623-480b-9b3b-7c1b107dfde0"
  }
];
---

<Layout title="Certificates - Rohit Medpalli">
  <main class="container mx-auto px-4 py-8">
    <h1 class="text-4xl font-bold mb-12 text-center relative">
      <span class="text-cyan-400 inline-block transform hover:scale-110 transition-transform">#</span> Certificates
      <div class="absolute -bottom-4 left-1/2 transform -translate-x-1/2 w-24 h-1 bg-gradient-to-r from-cyan-500 to-blue-600"></div>
    </h1>
    
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mt-12">
      {certificates.map((certificate) => (
        <div class="group" data-aos="fade-up">
          <div class="relative bg-gray-800 rounded-xl overflow-hidden shadow-lg border border-gray-700 group-hover:border-cyan-400 transition-all duration-300 transform group-hover:-translate-y-2">
            <div class="aspect-video w-full bg-gray-900/70 overflow-hidden cursor-pointer certificate-image" 
              data-image={`/PersonalWebsite/PersonalWebsite/images/certificates/${certificate.image}`}
              data-title={`${certificate.title} Certificate`}>
              <img 
                src={`/PersonalWebsite/PersonalWebsite/images/certificates/${certificate.image}`} 
                alt={`${certificate.title} Certificate`}
                class="w-full h-full object-cover opacity-70 group-hover:opacity-100 transition-opacity duration-300 scale-105 group-hover:scale-100"
              />
              <div class="absolute inset-0 bg-gradient-to-b from-transparent via-transparent to-gray-800 pointer-events-none"></div>
            </div>
            
            <div class="p-6 relative">
              <div class="flex justify-between items-start mb-3">
                <h3 class="text-xl font-bold text-white group-hover:text-cyan-400 transition-colors">
                  {certificate.title}
                </h3>
                <span class="bg-cyan-400/20 text-cyan-400 text-xs px-2 py-1 rounded">
                  {certificate.date}
                </span>
              </div>
              
              <p class="text-gray-400 text-sm mb-4">
                {certificate.description}
              </p>
              
              <div class="flex flex-col space-y-2">
                <div class="flex items-center text-sm">
                  <svg class="w-4 h-4 mr-2 text-cyan-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4" />
                  </svg>
                  <span>Issued by {certificate.issuer}</span>
                </div>
                <div class="flex items-center text-sm">
                  <svg class="w-4 h-4 mr-2 text-cyan-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 5v2m0 4v2m0 4v2M5 5a2 2 0 00-2 2v3a2 2 0 110 4v3a2 2 0 002 2h14a2 2 0 002-2v-3a2 2 0 110-4V7a2 2 0 00-2-2H5z" />
                  </svg>
                  <span>Credential ID: {certificate.credentialId}</span>
                </div>
              </div>
              
              <a 
                href={certificate.url} 
                target="_blank" 
                rel="noopener noreferrer"
                class="absolute bottom-0 right-0 m-4 p-2 bg-cyan-500 hover:bg-cyan-400 text-white rounded-full shadow-lg transition-all duration-300 transform group-hover:scale-110"
                aria-label="View certificate"
              >
                <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
                </svg>
              </a>
            </div>
          </div>
        </div>
      ))}
    </div>
  </main>
  <!-- Modal for full-size image -->
  <div id="imageModal" class="fixed inset-0 z-50 hidden">
    <div id="modalBackdrop" class="absolute inset-0 bg-black/90 backdrop-blur-sm transition-opacity duration-300"></div>
    <div class="fixed inset-0 flex items-center justify-center p-4 transform transition-transform duration-300">
      <div class="relative max-w-5xl w-full">
        <button id="closeButton" class="absolute -top-12 right-0 text-white hover:text-cyan-400 focus:outline-none">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
        <img id="modalImage" src="" alt="" class="w-full h-auto rounded-lg shadow-2xl transform transition-transform duration-300 scale-95 opacity-0">
      </div>
    </div>
  </div>

  <script is:inline define:vars={{ certificates }}>
    // JavaScript for modal functionality
    document.addEventListener('astro:page-load', () => {
      // Define modal functions first
      window.openModal = function(imageSrc, altText) {
        const modal = document.getElementById('imageModal');
        const modalImg = document.getElementById('modalImage');
        modal.classList.remove('hidden');
        modalImg.src = imageSrc;
        modalImg.alt = altText;
        setTimeout(() => {
          modalImg.classList.remove('scale-95', 'opacity-0');
          modalImg.classList.add('scale-100', 'opacity-100');
        }, 10);
        document.body.style.overflow = 'hidden';
      };

      window.closeModal = function() {
        const modal = document.getElementById('imageModal');
        const modalImg = document.getElementById('modalImage');
        modalImg.classList.add('scale-95', 'opacity-0');
        modalImg.classList.remove('scale-100', 'opacity-100');
        setTimeout(() => {
          modal.classList.add('hidden');
          modalImg.src = '';
        }, 300);
        document.body.style.overflow = 'auto';
      };

      // Add click handlers to all certificate images
      document.querySelectorAll('.certificate-image').forEach(image => {
        image.addEventListener('click', () => {
          const imageSrc = image.dataset.image;
          const altText = image.dataset.title;
          window.openModal(imageSrc, altText);
        });
      });



      // Close modal on escape key
      document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape') window.closeModal();
      });

      // Add click handlers for modal backdrop and close button
      document.getElementById('modalBackdrop').addEventListener('click', window.closeModal);
      document.getElementById('closeButton').addEventListener('click', window.closeModal);
    }, { once: false });
  </script>
  
  <script>
    // Ensure modal is hidden when navigating away
    document.addEventListener('astro:before-preparation', () => {
      const modal = document.getElementById('imageModal');
      if (modal) modal.classList.add('hidden');
    });
  </script>
</Layout>
