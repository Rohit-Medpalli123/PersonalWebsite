---
import Layout from '../layouts/Layout.astro';
import { getCollection } from 'astro:content';

// Get all projects and sort by completion date
const projects = (await getCollection('projects'))
  .sort((a, b) => b.data.completed.valueOf() - a.data.completed.valueOf());

// Group projects by category
const projectsByCategory = projects.reduce((acc, project) => {
  const category = project.data.category;
  if (!acc[category]) acc[category] = [];
  acc[category].push(project);
  return acc;
}, {} as Record<string, typeof projects>);

// Category labels
const categoryLabels = {
  automation: 'Test Automation',
  testing: 'Testing Solutions',
  development: 'Development Projects'
};
---

<Layout title="Projects - Rohit Medpalli">
  <main class="container mx-auto px-4 py-8">
    <h1 class="text-4xl font-bold mb-12 text-center relative">
      <span class="text-cyan-400 inline-block transform hover:scale-110 transition-transform">#</span> Projects
      <div class="absolute -bottom-4 left-1/2 transform -translate-x-1/2 w-24 h-1 bg-gradient-to-r from-cyan-500 to-blue-600"></div>
    </h1>

    {Object.entries(projectsByCategory).map(([category, categoryProjects]) => (
      <div class="mb-16 last:mb-0">
        <h2 class="text-2xl font-bold mb-8 text-cyan-400">{categoryLabels[category]}</h2>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
          {categoryProjects.map((project) => (
            <a href={`/PersonalWebsite/projects/${project.slug}`} class="group relative block">
              <div class="absolute inset-0 bg-gradient-to-r from-cyan-500 to-blue-600 rounded-xl blur opacity-25 group-hover:opacity-40 transition-opacity"></div>
              <div class="relative bg-gray-900 p-8 rounded-xl border border-gray-800 hover:border-cyan-400 transition-all duration-300 transform hover:-translate-y-1 hover:shadow-lg hover:shadow-cyan-500/10">
                <h3 class="text-xl font-bold mb-3 text-white">{project.data.title}</h3>
                <p class="text-gray-300 mb-6">{project.data.description}</p>
                <div class="flex flex-wrap gap-2 mb-6">
                  {Object.entries(project.data.techStack).map(([category, items]) => 
                    items.map((tech) => (
                      <span class="px-3 py-1 bg-cyan-400/10 text-cyan-400 rounded-full text-sm">{tech}</span>
                    ))
                  ).flat()}
                </div>
                <div class="flex space-x-4">
                  {project.data.github && (
                    <span 
                      class="text-cyan-400 hover:text-cyan-300 transition-colors"
                      onclick="window.open('{project.data.github}', '_blank'); event.stopPropagation();"
                    >
                      View on GitHub →
                    </span>
                  )}
                  {project.data.demo && (
                    <span 
                      class="text-cyan-400 hover:text-cyan-300 transition-colors"
                      onclick="window.open('{project.data.demo}', '_blank'); event.stopPropagation();"
                    >
                      Live Demo →
                    </span>
                  )}
                </div>
              </div>
            </a>
          ))}
        </div>
      </div>
    ))}
  </main>
</Layout>
